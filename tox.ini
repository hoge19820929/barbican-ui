[tox]
envlist = py3,pep8,releasenotes
minversion = 3.18.0
skipsdist = True
ignore_basepython_conflict = True

[testenv]
usedevelop = True
setenv = VIRTUAL_ENV={envdir}
         INTEGRATION_TESTS=0
         NOSE_WITH_OPENSTACK=1
         NOSE_OPENSTACK_COLOR=1
         NOSE_OPENSTACK_RED=0.05
         NOSE_OPENSTACK_YELLOW=0.025
         NOSE_OPENSTACK_SHOW_ELAPSED=1
deps =
  -c{env:UPPER_CONSTRAINTS_FILE:https://opendev.org/openstack/requirements/raw/branch/master/upper-constraints.txt}
  -r{toxinidir}/requirements.txt
  -r{toxinidir}/test-requirements.txt
commands = python manage.py test {posargs} --settings=barbican_ui.test.settings

# For installation of horizon on local
# NOTICE: this tox.ini requires horizon repository cloned in sibling directory.
[testenv:hz-local]
commands =
  pip install -e ../horizon

[testenv:venv]
commands = {posargs}

[testenv:pep8]
basepython = python3
commands = flake8 {posargs}

[flake8]
ignore = F405
exclude = .venv,.git,.tox,dist,*lib/python*,*egg,build,node_modules
max-complexity = 20

[testenv:cover]
basepython = python3
commands =
  coverage erase
  coverage run {toxinidir}/manage.py test barbican_ui --settings=barbican_ui.test.settings {posargs} --exclude-dir=barbican_ui/test/integration_tests {posargs}
  coverage xml --omit '.tox/cover/*' -o 'cover/coverage.xml'
  coverage html --omit '.tox/cover/*' -d 'cover/htmlcov'

[testenv:eslint]
basepython = python3
whitelist_externals =
  npm
commands =
  npm install
  npm run lint

# NOTE(shu-mutow): The "postinstall" script on package.json will install horizon
# from master branch into python3.x environment for testing javascripts.
# Horizon from master is needed to be cloned into ../horizon on both local and CI.
[testenv:karma]
basepython = python3
whitelist_externals =
  {[testenv:eslint]whitelist_externals}
commands =
  npm install
  npm run test

[testenv:karma-local]
basepython = python3
whitelist_externals =
  {[testenv:eslint]whitelist_externals}
commands =
  {[testenv:karma]commands}

[testenv:docs]
basepython = python3
deps =
  -c{env:UPPER_CONSTRAINTS_FILE:https://opendev.org/openstack/requirements/raw/branch/master/upper-constraints.txt}
  -r{toxinidir}/doc/requirements.txt
commands=
  sphinx-build -W -b html doc/source doc/build/html

[testenv:docs-local]
basepython = python3
deps =
  {[testenv:docs]deps}
commands=
  {[testenv:hz-local]commands}
  {[testenv:docs]commands}

[testenv:releasenotes]
basepython = python3
deps =
  {[testenv:docs]deps}
commands =
  sphinx-build -a -E -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html

